name: ReactBuild

on:
  workflow_call:
    inputs:
     GithubRunnerGroupName:
        default: "ubuntu-latest"
        required: false
        type: string
     ApplicationName:
        required: true
        type: string
     ReleaseTag:
        required: true
        type: string  
     DockerFilePath:
        default: "./Dockerfile"
        required: false
        type: string
     BuildArtifactRetentionDays:
        default: 3
        required: false
        type: number
     RunTests:
        default: false
        required: false
        type: boolean
    
jobs:
  build:
    runs-on: ${{ inputs.GithubRunnerGroupName }}

    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        target: ["dev","qa", "prod"]
       # node-version: [18.3.0]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Rename config.${{ matrix.target}}.json
        if: ${{ matrix.target != 'prod' }}
        shell: bash
        run: |
          rm src/config.json
          mv src/config.${{ matrix.target }}.json src/config.json
          rm src/config.*.json
      - name: Install dependencies
        run: npm i 

      - name: Fix packages issues
        run: npm audit fix
        
      - name: Update Browsers List
        run: npx update-browserslist-db@latest

      - name: Build
        run: npm run build --if-present

      - name: Run the dev tests
        if: ${{ inputs.RunTests && matrix.target == 'dev'}}
        run: npm test

      # Setup docker build X so that we can build and export the image to a tar file
      - name: "Set up docker build x"
        uses: docker/setup-buildx-action@v1

      - name: 'Add Tmp/ApplicationName folder  before build'
        run: mkdir -p /tmp/${{ inputs.ApplicationName}}-${{matrix.target}}
  

      # Build docker image and export to a .tar file
      - name: Build and export image to .tar file
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{inputs.DockerFilePath}}
          tags: ${{ inputs.ApplicationName}}${{ matrix.target }}:${{ inputs.ReleaseTag }}, ${{ inputs.ApplicationName}}${{ matrix.target }}:${{ github.run_number }}, ${{ inputs.ApplicationName }}${{ matrix.target }}:${{ github.sha}}
          outputs: type=docker,dest=/tmp/${{ inputs.ApplicationName}}-${{matrix.target}}/image.tar
          

      # Upload the image tar file so that we can use it to deploy to multiple environments
      - name: Upload image .tar file to Github artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.ApplicationName}}-${{ matrix.target }}
          path: "/tmp/${{ inputs.ApplicationName}}-${{matrix.target}}/image.tar"
          retention-days: ${{ inputs.BuildArtifactRetentionDays }}

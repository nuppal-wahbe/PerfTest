name: ReactBuild

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      GithubRunnerGroupName:
        default: 'ubuntu-latest'
        required: false
        type: string
      DockerFilePath:
        default: './Dockerfile'
        required: false
        type: string
      BuildArtifactRetentionDays:
        default: 3
        required: false
        type: number
      RunTests:
        default: true
        required: false
        type: boolean
      ImageName:
        required: true
        type: string
    secrets:
      CONTAINER_REGISTRY_LOGIN_SERVER:
        required: true
      CONTAINER_REGISTRY_USERNAME:
        required: true
      CONTAINER_REGISTRY_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ${{ inputs.GithubRunnerGroupName }}

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Remove other config.*.json files
      shell: bash
      run: |
        rm src/config.*.json

    - name: Install dependencies
      run: npm ci 

    - name: Build
      run: npm run build --if-present        

    - name: Run the tests
      if: ${{ inputs.RunTests }}
      run: npm test

    # Setup docker build X so that we can build and export the image to a tar file
    - name: 'Set up docker build x'
      uses: docker/setup-buildx-action@v1

    # Build docker image and export to a .tar file
    - name: Build and export image to .tar file
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ${{ inputs.DockerFilePath }}
        tags: react
        outputs: type=docker,dest=/tmp/image.tar
    
    # # Upload the image tar file 
    # - name: Upload image .tar file to Github artifacts
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: react
    #     path: '/tmp/image.tar'
    #     retention-days: ${{ inputs.BuildArtifactRetentionDays }}

    # # Downloads container image from artifacts
    # - name: download image .tar file from Github artifacts
    #   uses: actions/download-artifact@v2.0.6
    #   with:
    #     name: react
    #     path: /tmp

    # Load docker image from .tar file
    - name: Load docker image from .tar file
      run: docker load --input /tmp/image.tar         

    # Set the docker image tag to the container registry server tag
    - name: Set docker image tag for container registry
      run: docker tag react ${{secrets.CONTAINER_REGISTRY_LOGIN_SERVER}}/${{ inputs.ImageName }}:latest

    # Login to Azure Container registry     
    - name: Login to Azure Container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{secrets.CONTAINER_REGISTRY_LOGIN_SERVER}}
        username: ${{secrets.CONTAINER_REGISTRY_USERNAME}}
        password: ${{secrets.CONTAINER_REGISTRY_PASSWORD}}

    # Push Docker image to Azure Container Registry  
    - name: Push Docker image to Azure Container Registry 
      run: docker push ${{secrets.CONTAINER_REGISTRY_LOGIN_SERVER}}/${{ inputs.ImageName }}:latest
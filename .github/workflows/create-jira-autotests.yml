name: Create Jira Issue via API for automated tests

on:
  workflow_call:
    inputs:
      automatedTestResultPassPercent:
        type: string
        description: 'Automated Test Result Percent'
        required: true
        default: '0'
      automatedTestResultFailPercent:
        type: string
        description: 'Automated Test Result Percent'
        required: true
        default: '0'
      totalNumberOfTests:
        type: string
        description: 'Total Number of Tests'
        required: true
        default: '0'
      releaseTag:
        default: 'not specified'
        required: false
        description: 'Semantic Version from ReleaseDrafter'
        type: string
    secrets:
      JIRA_EMAIL:
        required: true
      JIRA_API_TOKEN:
        required: true
    
jobs:
  createJiraIssue:
    runs-on: ubuntu-latest
    steps:
      - name: Create Jira Issue via API
        shell: python
        run: | 
          import requests
          from requests.auth import HTTPBasicAuth
          import json

          auth = HTTPBasicAuth("${{ secrets.JIRA_EMAIL }}", "${{ secrets.JIRA_API_TOKEN }}")
          url = "https://wahbejira.atlassian.net/rest/api/3/issue"
          headers = {
              "Accept": "application/json",
              "Content-Type": "application/json"
          }
          data = json.dumps( 
               {
                "fields": {
                  "project": {
                  "key": "ACT"
                },
                "summary": "Gating Results- " + "${{inputs.releaseTag}}",
                "description": {
                  "type": "doc",
                  "version": 1,
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Gating Results \n Total number of tests: ${{ inputs.totalNumberOfTests }} \n Automated Test Result: Pass Percent: ${{ inputs.automatedTestResultPassPercent }} \n Automated Test Result: Fail Percent: ${{ inputs.automatedTestResultFailPercent }}"
                        }
                      ]
                    }
                  ]
                },
                "issuetype": {
                  "name": "Task"
                }
              }
            })

          print(data)

          response = requests.request(
              "POST",
              url,
              headers=headers,
              data=data,
              auth=auth
          )

          print(response.text)
